version: '3.9'

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    working_dir: /app
    volumes:
      - ../backend:/app
      - backend_data:/data
    environment:
      DATABASE_URL: ${DATABASE_URL:-sqlite+aiosqlite:////data/app.db}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret}
      IP_HASH_SECRET: ${IP_HASH_SECRET:-dev-ip-hash}
      SESSION_SECRET: ${SESSION_SECRET:-dev-session-secret}
      RIOT_API_KEY: ${RIOT_API_KEY:-}
      RIOT_CACHE_TTL_SECONDS: ${RIOT_CACHE_TTL_SECONDS:-600}
      DOMAIN: ${DOMAIN:-localhost}
      VITE_URL: ${VITE_URL:-${DOMAIN}}
      TZ: ${TZ:-Europe/Berlin}
    ports:
      - "8000:8000"
    networks: [ web ]

  frontend:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - ../frontend:/app
    environment:
      VITE_BACKEND_ORIGIN: http://backend:8000
      VITE_BACKEND_WS: ws://backend:8000
      VITE_URL: ${VITE_URL:-${DOMAIN:-localhost}}
      VITE_REGION: ${VITE_REGION:-euw1}
      VITE_SUMMONER: ${VITE_SUMMONER:-YOUR_SUMMONER}
      VITE_TWITCH_CHANNEL: ${VITE_TWITCH_CHANNEL:-YOUR_CHANNEL}
    ports:
      - "5173:5173"
    networks: [ web ]

  # Optional: lokaler Reverse Proxy, wenn du Dev durch Caddy laufen lassen willst
  # caddy:
  #   image: caddy:2-alpine
  #   depends_on: [backend, frontend]
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile:ro
  #     - caddy_data:/data
  #   environment:
  #     DOMAIN: ${DOMAIN:-localhost}
  #   networks: [web]

volumes:
  backend_data:
  caddy_data:

networks:
  web: